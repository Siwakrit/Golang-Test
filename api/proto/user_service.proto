syntax = "proto3";
package proto;

option go_package = "github.com/yourusername/api/proto";

import "google/api/annotations.proto";

// Common empty response
message Empty {}

// Auth related messages
message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
  string user_id = 2;
}

message RegisterRequest {
  string email = 1;
  string password = 2;
  string name = 3;
}

message LogoutRequest {
  string token = 1;
}

message ResetPasswordRequest {
  string email = 1;
}

message ResetPasswordConfirmRequest {
  string token = 1;
  string new_password = 2;
}

// User related messages
message User {
  string id = 1;
  string name = 2;
  string email = 3;
  string created_at = 4;
  string updated_at = 5;
}

message GetProfileRequest {
  string user_id = 1;
}

message UpdateProfileRequest {
  string user_id = 1;
  string name = 2;
  string email = 3;
}

message DeleteProfileRequest {
  string user_id = 1;
}

message ListUsersRequest {
  string name_filter = 1;
  string email_filter = 2;
  int32 page = 3;
  int32 limit = 4;
}

message ListUsersResponse {
  repeated User users = 1;
  int32 total = 2;
  int32 page = 3;
  int32 limit = 4;
}

// The main service definition
service UserService {
  // Auth endpoints
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/v1/login"
      body: "*"
    };
  }
  rpc Register(RegisterRequest) returns (User) {
    option (google.api.http) = {
      post: "/v1/register"
      body: "*"
    };
  }
  rpc Logout(LogoutRequest) returns (Empty) {
    option (google.api.http) = {
      post: "/v1/logout"
      body: "*"
    };
  }
  rpc ResetPassword(ResetPasswordRequest) returns (Empty) {
    option (google.api.http) = {
      post: "/v1/reset-password"
      body: "*"
    };
  }
  rpc ResetPasswordConfirm(ResetPasswordConfirmRequest) returns (Empty) {
    option (google.api.http) = {
      post: "/v1/reset-password/confirm"
      body: "*"
    };
  }
  // User management
  rpc GetProfile(GetProfileRequest) returns (User) {
    option (google.api.http) = {
      get: "/v1/profile/{user_id}"
    };
  }
  rpc UpdateProfile(UpdateProfileRequest) returns (User) {
    option (google.api.http) = {
      put: "/v1/profile/{user_id}"
      body: "*"
    };
  }
  rpc DeleteProfile(DeleteProfileRequest) returns (Empty) {
    option (google.api.http) = {
      delete: "/v1/profile/{user_id}"
    };
  }
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {
    option (google.api.http) = {
      get: "/v1/users"
    };
  }
}